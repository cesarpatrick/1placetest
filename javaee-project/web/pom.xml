<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <!--
        The pom builds the web WAR artifact.
    -->

    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>java.demo</groupId>
        <artifactId>application</artifactId>
        <version>0.0.1-SNAPSHOT</version>
    </parent>
    <artifactId>ejb-in-ear-web</artifactId>
    <packaging>war</packaging>
    <name>JSF web app</name>
    <description>This project demonstrates how to package an EJB and WAR in an EAR; this is the WAR POM file</description>

    

    <dependencies>

      

        <!-- Import the ejb project so that the JSF managed bean can use the EJB -->
        <dependency>
             <groupId>java.demo</groupId>
            <artifactId>ejb-in-ear-ejb</artifactId>
            <type>ejb</type>
            <scope>provided</scope>
        </dependency>

       <dependency>
            <groupId>org.primefaces</groupId>
            <artifactId>primefaces</artifactId>
            <version>${primefaces.version}</version>
        </dependency>
        
        <dependency>
            <groupId>org.jboss.spec.javax.servlet</groupId>
            <artifactId>jboss-servlet-api_4.0_spec</artifactId>
            <scope>provided</scope>
        </dependency>
       
        <!-- Import the JAX-RS API, we use provided scope as the API is included in JBoss WildFly -->
        <dependency>
            <groupId>org.jboss.resteasy</groupId>
            <artifactId>resteasy-jaxrs</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
           <groupId>org.jboss.resteasy</groupId>
           <artifactId>resteasy-validator-provider-11</artifactId>
           <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.resteasy</groupId>
            <artifactId>resteasy-jackson2-provider</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.resteasy</groupId>
            <artifactId>resteasy-multipart-provider</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.james</groupId>
            <artifactId>apache-mime4j</artifactId>
            <scope>provided</scope>
        </dependency>
    
        <dependency>
            <groupId>com.sun.mail</groupId>
            <artifactId>javax.mail</artifactId>
            <scope>provided</scope>
        </dependency>
        <!-- Import the CDI API, we use provided scope as the API is included in JBoss WildFly -->
        <dependency>
            <groupId>javax.enterprise</groupId>
            <artifactId>cdi-api</artifactId>
            <scope>provided</scope>
        </dependency>
      
        <!-- Import the JSF API, we use provided scope as the API is included in JBoss WildFly -->
        <dependency>
            <groupId>org.jboss.spec.javax.faces</groupId>
            <artifactId>jboss-jsf-api_2.3_spec</artifactId>
            <scope>provided</scope>
        </dependency>
        <!-- https://mvnrepository.com/artifact/com.sun.faces/jsf-impl -->
       <dependency>
		    <groupId>org.jboss.spec.javax.faces</groupId>
		    <artifactId>jboss-jsf-api_2.3_spec</artifactId>
		</dependency>
     
         
        <dependency>
            <groupId>org.jboss.spec.javax.el</groupId>
            <artifactId>jboss-el-api_3.0_spec</artifactId>
            <scope>provided</scope>
        </dependency>
        
        <!--  n terms of compilation, you would need to use the jboss-transaction-api_1.2_spec artifact which is still not included in the jboss-javaee-7.0-1.0.0.Final POM  -->
        <dependency>
            <groupId>org.jboss.spec.javax.transaction</groupId>
            <artifactId>jboss-transaction-api_1.2_spec</artifactId>
        </dependency>
          
        <!-- Import the EJB API, we use provided scope as the API is included in JBoss WildFly -->
        <dependency>
            <groupId>org.jboss.spec.javax.ejb</groupId>
            <artifactId>jboss-ejb-api_3.2_spec</artifactId>
            <scope>provided</scope>
         </dependency>
    
       
    
        <!-- JSR-303 (Bean Validation) Implementation -->
        <!-- Provides portable constraints such as @Email -->
        <!-- Hibernate Validator is shipped in JBoss WildFly -->
           
           
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-core</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.spec.javax.jms</groupId>
            <artifactId>jboss-jms-api_2.0_spec</artifactId>
            <scope>provided</scope>
        </dependency>
        <!-- Test scope dependencies -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>
    <build>
      <finalName>${project.artifactId}</finalName>
      <testResources>
        <testResource>
            <directory>${project.basedir}/src/test/</directory>
        </testResource>
   	  </testResources>
      <plugins>
         <plugin>
            <artifactId>maven-war-plugin</artifactId>
            <version>${version.war.plugin}</version>
            <configuration>
               <!-- Java EE 7 doesn't require web.xml, Maven needs to catch up! -->
               <failOnMissingWebXml>false</failOnMissingWebXml>
               <warSourceExcludes>CVS/**</warSourceExcludes>
                <webXml>${maven.war.webxml}</webXml>
            </configuration>
         </plugin>
	</plugins>
	</build>
</project>
